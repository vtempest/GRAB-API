"use strict";(self.webpackChunkdocusaurus_openapi_typedoc=self.webpackChunkdocusaurus_openapi_typedoc||[]).push([["676"],{82427:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>f,default:()=>y,contentTitle:()=>v,assets:()=>b,toc:()=>j,metadata:()=>r});var r=JSON.parse('{"id":"guide/Examples","title":"Examples","description":"Basic Examples","source":"@site/docs/guide/Examples.md","sourceDirName":"guide","slug":"/guide/Examples","permalink":"/guide/Examples","draft":false,"unlisted":false,"editUrl":"https://github.com/vtempest/grab-api.js/blob/main/docs/guide/Examples.md","tags":[],"version":"current","frontMatter":{},"sidebar":"default","previous":{"title":"Comparisons","permalink":"/guide/Comparisons"},"next":{"title":"Performance","permalink":"/guide/Performance"}}'),s=a(74132),t=a(50065),i=a(39546),l=a(54461),o=a(14044),c=a(81255),u=a(1897);function d(e){let{className:n,block:a,selectedValue:r,selectValue:t,tabValues:i}=e,c=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{let n=e.currentTarget,a=i[c.indexOf(n)].value;a!==r&&(u(n),t(a))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{let a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},n),children:i.map(e=>{let{value:n,label:a,attributes:t}=e;return(0,s.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{c.push(e)},onKeyDown:p,onClick:d,...t,className:(0,l.Z)("tabs__item","tabItem_Fy5Y",t?.className,{"tabs__item--active":r===n}),children:a??n},n)})})}function p(e){let{lazy:n,children:a,selectedValue:r}=e,t=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){let e=t.find(e=>e.props.value===r);return e?(0,i.cloneElement)(e,{className:(0,l.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:t.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function h(e){let n=(0,c.Y)(e);return(0,s.jsxs)("div",{className:(0,l.Z)("tabs-container","tabList_FIrj"),children:[(0,s.jsx)(d,{...n,...e}),(0,s.jsx)(p,{...n,...e})]})}function m(e){let n=(0,u.default)();return(0,s.jsx)(h,{...e,children:(0,c.h)(e.children)},String(n))}var g=a(94554);a(89440);let f={},v=void 0,b={},j=[{value:"Basic Examples",id:"basic-examples",level:2},{value:"Basic Import",id:"basic-import",level:3},{value:"Import with TypeScript Types",id:"import-with-typescript-types",level:3},{value:"Basic Examples",id:"basic-examples-1",level:2},{value:"Simple GET Request",id:"simple-get-request",level:3},{value:"POST Request with Body",id:"post-request-with-body",level:3},{value:"Reactive Loading Status",id:"reactive-loading-status",level:3},{value:"Global Defaults Configuration",id:"global-defaults-configuration",level:3},{value:"Instance with Separate Defaults",id:"instance-with-separate-defaults",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Pagination with Infinite Scroll",id:"pagination-with-infinite-scroll",level:3},{value:"Debounced Search",id:"debounced-search",level:3},{value:"Request Caching",id:"request-caching",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Request Cancellation",id:"request-cancellation",level:3},{value:"Error Handling and Retry",id:"error-handling-and-retry",level:3},{value:"Request Hooks and Interceptors",id:"request-hooks-and-interceptors",level:3},{value:"Proxy Agent",id:"proxy-agent",level:3},{value:"File Upload",id:"file-upload",level:3},{value:"Mock Server for Testing",id:"mock-server-for-testing",level:3},{value:"Unit Tests with Jest",id:"unit-tests-with-jest",level:3}];function x(e){let n={code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"basic-examples",children:"Basic Examples"}),"\n",(0,s.jsx)(n.h3,{id:"basic-import",children:"Basic Import"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"npm install grab-api.js\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"npm2yarn",children:"bun i grab-api.js\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import grab from 'grab-api.js';\n"})}),"\n",(0,s.jsx)(n.h3,{id:"import-with-typescript-types",children:"Import with TypeScript Types"}),"\n",(0,s.jsx)(n.p,{children:"This supports tooltips and autocomplete by adding types globally."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import 'grab-api.js/global'\nimport grab from 'grab-api.js';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"basic-examples-1",children:"Basic Examples"}),"\n",(0,s.jsx)(n.h3,{id:"simple-get-request",children:"Simple GET Request"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Basic GET request\nconst user = await grab('user/123');\nconsole.log(user); // { id: 123, name: \"John Doe\", ... }\n\n// With query parameters\nconst searchResults = await grab('search', {\n  query: 'javascript',\n  page: 1,\n  limit: 10\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"post-request-with-body",children:"POST Request with Body"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Create a new user\nconst newUser = await grab('users', {\n  method: 'POST',\n  name: 'Jane Doe',\n  email: 'jane@example.com',\n  age: 25\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"reactive-loading-status",children:"Reactive Loading Status"}),"\n",(0,s.jsxs)(m,{children:[(0,s.jsxs)(g.default,{value:"react",label:"React",children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport { grab } from 'grab-api.js';\n\nfunction UserProfile() {\n  const [userState, setUserState] = useState({\n    data: null,\n    isLoading: false,\n    error: null\n  });\n\n  const loadUser = async (userId) => {\n    await grab(`users/${userId}`, {\n      response: userState,\n      method: 'GET'\n    });\n    setUserState({...userState}); // Trigger re-render\n  };\n\n  return (\n    <div>\n      {userState.isLoading && <div>Loading...</div>}\n      {userState.error && <div>Error: {userState.error}</div>}\n      {userState.data && (\n        <div>\n          <h2>{userState.data.name}</h2>\n          <p>{userState.data.email}</p>\n        </div>\n      )}\n      <button onClick={() => loadUser(123)}>\n        Load User\n      </button>\n    </div>\n  );\n}\n"})}),(0,s.jsx)(n.hr,{})]}),(0,s.jsx)(g.default,{value:"svelte",label:"Svelte",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<script>\n  import { grab } from \'grab-api.js\';\n  \n  let searchResults = $state({\n    results: [],\n    isLoading: false,\n    error: null\n  });\n\n  async function searchProducts(query) {\n    await grab(\'products/search\', {\n      response: searchResults,\n      method: \'POST\',\n      query: query,\n      category: \'electronics\'\n    });\n  }\n<\/script>\n\n<input \n  type="text" \n  on:input={(e) => searchProducts(e.target.value)}\n  placeholder="Search products..." \n/>\n\n{#if searchResults.isLoading}\n  <div class="loading">Searching...</div>\n{:else if searchResults.error}\n  <div class="error">{searchResults.error}</div>\n{:else if searchResults.results}\n  <div class="results">\n    {#each searchResults.results as product}\n      <div class="product-card">\n        <h3>{product.name}</h3>\n        <p>${product.price}</p>\n      </div>\n    {/each}\n  </div>\n{/if}\n'})})}),(0,s.jsx)(g.default,{value:"vue3",label:"Vue 3",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:'<template>\n  <div>\n    <input \n      v-model="searchTerm" \n      @input="searchUsers"\n      placeholder="Search users..."\n    />\n    \n    <div v-if="userResults.isLoading" class="loading">\n      Loading users...\n    </div>\n    \n    <div v-else-if="userResults.error" class="error">\n      {{ userResults.error }}\n    </div>\n    \n    <div v-else class="user-list">\n      <div \n        v-for="user in userResults.users" \n        :key="user.id"\n        class="user-card"\n      >\n        {{ user.name }} - {{ user.email }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from \'vue\';\nimport { grab } from \'grab-api.js\';\n\nconst searchTerm = ref(\'\');\nconst userResults = reactive({\n  users: [],\n  isLoading: false,\n  error: null\n});\n\nconst searchUsers = async () => {\n  if (searchTerm.value.length < 2) return;\n  \n  await grab(\'users/search\', {\n    response: userResults,\n    query: searchTerm.value,\n    status: \'active\'\n  });\n};\n<\/script>\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"global-defaults-configuration",children:"Global Defaults Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Set defaults for all requests\ngrab('', {\n  setDefaults: true,\n  baseURL: 'https://api.myapp.com/v1',\n  timeout: 30, // 30 seconds\n  debug: true,\n  rateLimit: 1, // 1 second between requests\n  cache: false,\n  cancelOngoingIfNew: true,\n  headers: {\n    'Authorization': 'Bearer your-token-here',\n    'X-API-Key': 'your-api-key'\n  }\n});\n\n// Or set directly\ngrab.defaults.baseURL = 'https://api.myapp.com/v1';\ngrab.defaults.headers = {\n  'Authorization': 'Bearer your-token-here'\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"instance-with-separate-defaults",children:"Instance with Separate Defaults"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// separate defaults, headers, and interceptors for a third-party API\nconst grabGoogleAPI = grab.instance({\n    headers: {'Authorization': 'Bearer token'},\n    baseURL: 'https://api.google.com/v1/',\n    debug: true\n});\nconst data = await grabGoogleAPI('/api/endpoint');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,s.jsx)(n.h3,{id:"pagination-with-infinite-scroll",children:"Pagination with Infinite Scroll"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"let productList = {\n  products: [],\n  isLoading: false,\n};\n\n// Load first page\nasync function loadResults(){\n  await grab('products', {\n    response: productList,\n    paginateResult: 'products', // Key to append results to\n    paginateKey: 'page',        // Parameter name for page number\n    limit: 20\n  });\n}\n\n// Infinite scroll implementation\nconst setupInfiniteScroll = (e) =>\n  e.addEventListener('scroll', () => \n    e.innerHeight + e.scrollY >= e.offsetHeight - 1000 && loadResults() );\n\nsetupInfiniteScroll(document.getElementById(\"results\"))\n\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"debounced-search",children:"Debounced Search"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Utility function for debouncing\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Debounced search implementation\nconst debouncedSearch = debounce(async (query) => {\n  if (query.length < 2) return;\n  \n  await grab('search', {\n    response: searchResults,\n    query: query,\n    cancelOngoingIfNew: true // Cancel previous searches\n  });\n}, 300); // Wait 300ms after user stops typing\n\n// Usage in input handler\nfunction handleSearchInput(event) {\n  debouncedSearch(event.target.value);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-caching",children:"Request Caching"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Enable caching for static data\nconst categories = await grab('categories', { \n  cache: true \n});\n\n// Subsequent calls return cached data\nconst categoriesAgain = await grab('categories', { \n  cache: true \n}); // Instant response from cache\n"})}),"\n",(0,s.jsx)(n.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Prevent spam requests\nlet searchResults = {};\n\nasync function searchWithRateLimit(query) {\n  await grab('search', {\n    response: searchResults,\n    query: query,\n    rateLimit: 2 // Wait 2 seconds between requests\n  });\n}\n\n// Multiple rapid calls will be rate limited\nsearchWithRateLimit('python');     // Executes immediately  \nsearchWithRateLimit('golang');   // fails, needs to wait\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-cancellation",children:"Request Cancellation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"let currentSearch = {};\n\nasync function searchProducts(query) {\n  // Cancel previous search when new one starts\n  await grab('products/search', {\n    response: currentSearch,\n    query: query,\n    cancelOngoingIfNew: true // Default behavior\n  });\n}\n\n// Prevent new requests if one is ongoing\nasync function preventDuplicateRequests(userId) {\n  await grab(`users/${userId}`, {\n    cancelNewIfOngoing: true // Prevents duplicate requests\n  });\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling-and-retry",children:"Error Handling and Retry"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"let apiData = {};\n\n// Automatic retry on failure\nawait grab('unreliable-endpoint', {\n  response: apiData,\n  retryAttempts: 3, // Retry 3 times on failure\n  timeout: 10       // 10 second timeout\n});\n\n// Manual error handling\ntry {\n  const result = await grab('api/data');\n  console.log('Success:', result);\n} catch (error) {\n  if (error.message.includes('timeout')) {\n    console.log('Request timed out');\n  } else if (error.message.includes('rate limit')) {\n    console.log('Too many requests');\n  } else {\n    console.log('Other error:', error.message);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"request-hooks-and-interceptors",children:"Request Hooks and Interceptors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Global request interceptor\ngrab.defaults.onBeforeRequest = (path, response, params, fetchParams) => {\n  // Add authentication header\n  fetchParams.headers.Authorization = `Bearer ${getAuthToken()}`;\n  \n  // Log all requests\n  console.log(`Making request to: ${path}`, params);\n  \n  // Modify request data\n  if (params.userId) {\n    params.user_id = params.userId;\n    delete params.userId;\n  }\n  \n  return [path, response, params, fetchParams];\n};\n\nfunction getAuthToken() {\n  return localStorage.getItem('authToken') || '';\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"proxy-agent",children:"Proxy Agent"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { HttpsProxyAgent } from 'https-proxy-agent';\n\nconst agent = new HttpsProxyAgent('http://username:password@proxyhost:port');\nlet res = await grab(\"/path\", { agent })\n"})}),"\n",(0,s.jsx)(n.h3,{id:"file-upload",children:"File Upload"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"async function uploadFile(file, onProgress) {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  const response = await grab('/api/upload', {\n    method: 'POST',\n    body: formData,\n    headers: {\n      'Authorization': `Bearer ${getAuthToken()}`\n    }\n  });\n  \n}\n\n// Alternative: Convert file to base64 for JSON API\nasync function uploadFileAsJSON(file) {\n  const base64 = await fileToBase64(file);\n  \n  return await grab('files/upload', {\n    method: 'POST',\n    filename: file.name,\n    content: base64,\n    mimeType: file.type\n  });\n}\n\nfunction fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(',')[1]);\n    reader.onerror = error => reject(error);\n  });\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mock-server-for-testing",children:"Mock Server for Testing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Setup mock responses for testing\ngrab.mock.users = {\n  response: [\n    { id: 1, name: 'John Doe', email: 'john@example.com' },\n    { id: 2, name: 'Jane Smith', email: 'jane@example.com' }\n  ],\n  delay: 1 // 1 second delay to simulate network\n};\n\ngrab.mock['products/search'] = {\n  response: (params) => ({\n    results: [\n      { id: 1, name: `Product matching \"${params.query}\"`, price: 29.99 },\n      { id: 2, name: `Another product for \"${params.query}\"`, price: 19.99 }\n    ],\n    total: 2\n  }),\n  method: 'POST',\n  delay: 0.5\n};\n\n// Now your API calls will use mock data\nconst users = await grab('users'); // Returns mock user data\n\n\n\n// Mock with conditional responses\ngrab.mock['auth/login'] = {\n  response: (params) => {\n    if (params.email === 'admin@example.com' && params.password === 'admin123') {\n      return {\n        success: true,\n        token: 'mock-jwt-token-12345',\n        user: { id: 1, name: 'Admin User', role: 'admin' }\n      };\n    } else {\n      return {\n        success: false,\n        error: 'Invalid credentials'\n      };\n    }\n  },\n  method: 'POST',\n  delay: 1\n};\n\n// Error simulation\ngrab.mock['users/create'] = {\n  response: (params) => {\n    if (!params.email) {\n      throw new Error('Email is required');\n    }\n    return { id: Date.now(), ...params, created: true };\n  },\n  method: 'POST'\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"unit-tests-with-jest",children:"Unit Tests with Jest"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// setup-tests.js\nimport { grab } from 'grab-api.js';\n\n// Setup global mocks for testing\nbeforeEach(() => {\n  // Clear previous mocks\n  grab.mock = {};\n  grab.log = [];\n});\n\n// user.test.js\nimport { grab } from 'grab-api.js';\n\ndescribe('User API', () => {\n  test('should fetch user data', async () => {\n    // Setup mock\n    grab.mock.users = {\n      response: { id: 1, name: 'Test User', email: 'test@example.com' }\n    };\n\n    const result = await grab('users');\n    \n    expect(result.id).toBe(1);\n    expect(result.name).toBe('Test User');\n  });\n\n  test('should handle user creation', async () => {\n    grab.mock.users = {\n      response: (params) => ({\n        id: 123,\n        ...params,\n        created: true\n      }),\n      method: 'POST'\n    };\n\n    const newUser = await grab('users', {\n      method: 'POST',\n      name: 'John Doe',\n      email: 'john@example.com'\n    });\n\n    expect(newUser.name).toBe('John Doe');\n    expect(newUser.created).toBe(true);\n  });\n\n  test('should handle errors', async () => {\n    grab.mock.users = {\n      response: () => {\n        throw new Error('User not found');\n      }\n    };\n\n    const result = await grab('users');\n    expect(result.error).toBe('User not found');\n  });\n});\n"})})]})}function y(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}}}]);